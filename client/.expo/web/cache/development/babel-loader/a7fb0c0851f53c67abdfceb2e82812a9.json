{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Details from \"./Details\";\nimport Home from \"./Home\";\nimport { useDispatch } from \"react-redux\";\nimport { GET_DATA } from \"../utils\";\nimport { useQuery } from \"@apollo/client\";\nimport { setNFT } from \"../store/Features\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function MainApp() {\n  var _useQuery = useQuery(GET_DATA),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      NFTData = _useQuery.NFTData;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!loading) {\n      dispatch(setNFT(data == null ? void 0 : data.nfts));\n      console.log(\"run\");\n    }\n\n    if (error) console.log(error);\n    return function () {\n      dispatch(setNFT([]));\n    };\n  }, []);\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      component: Details\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","Details","Home","useDispatch","GET_DATA","useQuery","setNFT","createNativeStackNavigator","Stack","MainApp","loading","error","data","NFTData","dispatch","nfts","console","log","headerShown"],"sources":["C:/Users/Kashif/Desktop/Working/NFT-App/client/screens/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Details from \"./Details\";\r\nimport Home from \"./Home\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { GET_DATA } from \"../utils\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { setNFT } from \"../store/Features\";\r\n\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nconst Stack = createNativeStackNavigator(); // or createNativeStackNavigator\r\nexport default function MainApp() {\r\n  const { loading, error, data, NFTData } = useQuery(GET_DATA);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      dispatch(setNFT(data?.nfts));\r\n      console.log(\"run\");\r\n    }\r\n    if (error) console.log(error);\r\n    return () => {\r\n      dispatch(setNFT([]));\r\n    };\r\n  }, []);\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Home\" component={Home} />\r\n      <Stack.Screen name=\"Details\" component={Details} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,MAAT;AAEA,SAASC,0BAAT,QAA2C,gCAA3C;;;AACA,IAAMC,KAAK,GAAGD,0BAA0B,EAAxC;AACA,eAAe,SAASE,OAAT,GAAmB;EAChC,gBAA0CJ,QAAQ,CAACD,QAAD,CAAlD;EAAA,IAAQM,OAAR,aAAQA,OAAR;EAAA,IAAiBC,KAAjB,aAAiBA,KAAjB;EAAA,IAAwBC,IAAxB,aAAwBA,IAAxB;EAAA,IAA8BC,OAA9B,aAA8BA,OAA9B;;EACA,IAAMC,QAAQ,GAAGX,WAAW,EAA5B;EAEAH,SAAS,CAAC,YAAM;IACd,IAAI,CAACU,OAAL,EAAc;MACZI,QAAQ,CAACR,MAAM,CAACM,IAAD,oBAACA,IAAI,CAAEG,IAAP,CAAP,CAAR;MACAC,OAAO,CAACC,GAAR,CAAY,KAAZ;IACD;;IACD,IAAIN,KAAJ,EAAWK,OAAO,CAACC,GAAR,CAAYN,KAAZ;IACX,OAAO,YAAM;MACXG,QAAQ,CAACR,MAAM,CAAC,EAAD,CAAP,CAAR;IACD,CAFD;EAGD,CATQ,EASN,EATM,CAAT;EAUA,OACE,MAAC,KAAD,CAAO,SAAP;IACE,gBAAgB,EAAC,MADnB;IAEE,aAAa,EAAE;MACbY,WAAW,EAAE;IADA,CAFjB;IAAA,WAME,KAAC,KAAD,CAAO,MAAP;MAAc,IAAI,EAAC,MAAnB;MAA0B,SAAS,EAAEhB;IAArC,EANF,EAOE,KAAC,KAAD,CAAO,MAAP;MAAc,IAAI,EAAC,SAAnB;MAA6B,SAAS,EAAED;IAAxC,EAPF;EAAA,EADF;AAWD"},"metadata":{},"sourceType":"module"}